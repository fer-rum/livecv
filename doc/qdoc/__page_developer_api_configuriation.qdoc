/*!
\page api-configuration.html
\indexpage Index
\title Configuring Live CVs

\section1 Build environmnent configuration on different platforms.

This section deals with configuring the environment necessary to use Live CV libraries.

\section2 Configuration on windows with Visual Studio.

\note If you know how to configure Qt, Visual Studio and Open CV, then you may skip this step.

Since the current build of Live CV is on Visual Studio, the opencv and Qt dlls are also required to have the same
compiler. Currently, the recommended versions for building Live CV plugins are :
 * Visual Studio 2013 or later
 * Qt 5.6 or later
 * Open CV 3.1.0 or later

Installers and installation instructions are all available on each vendors website. For Open CV, make sure you set up
the OPENCV_DIR environment variable according to the instructions found on Open CV's website.

It is recommended to download the above tools within that order (Qt installer automatically
recognizes the Visual Studio configuration)

The next step is to see wether Open CV works with QtCreator. To do that, create a
\b{Qt Console Project}, and open up the .pro file in Qt Creator. Add the following lines before the "SOURCES" text:

\code
#configuration variables

OPENCV_DIR_INCLUDE   = $$(OPENCV_DIR)/../../include
OPENCV_DIR_LIBRARIES = $$(OPENCV_DIR)/lib
OPENCV_VERSION       = 310

#include and build

INCLUDEPATH += $${OPENCV_DIR_INCLUDE}
LIBS += -L$${OPENCV_DIR_LIBRARIES} -lopencv_world$${OPENCV_VERSION}
\endcode

$$(OPENCV_DIR) is the environment variable configured while installing Open CV.

Once the variables and include files are set up, go to \b{main.cpp}, and add the following include at the top :

\code
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
\endcode

Then, in the main function, place the following code :

\code
cv::Mat toDisplay(cv::Size(800, 600), CV_8UC3, cv::Scalar(50, 200, 50));
cv::imshow("Test", toDisplay);
cv::waitKey();
\endcode

Compile this code using qmake or QtCreator. Run the file, and if you see a green window being displayed, it means the
project has been configured successfully.


\section2 Configuration on windows with Mingw.

Configuration for Mingw is similar to the one on visual studio, the only difference is that the Open CV library
is not build or sometimes not compabible with the mignw version provided by Qt. In order to use the Open CV libraries
you may need to compile the libraries separately using the mingw compiler. Documentation is available on Open CV's
website.

\section2 Configuration on linux with gcc.

After installing Open CV and QtCreator, create a new \b{Qt Console Project}, in QtCreator, then open up the .pro fil
and add the following lines before the "SOURCES" text:

CONFIG += link_pkgconfig
PKGCONFIG += opencv

Using pkg-config we link to Open CV libraries with just the following lines.

Then, go to \b{main.cpp}, and add the following include at the top :

\code
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
\endcode

Then, in the main function, place the following code :

\code
cv::Mat toDisplay(cv::Size(800, 600), CV_8UC3, cv::Scalar(50, 200, 50));
cv::imshow("Test", toDisplay);
cv::waitKey();
\endcode

Compile this code using qmake or QtCreator. Run the file, and if you see a green window being displayed.

*/
