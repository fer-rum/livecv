
/*!
\page using_live_cv.html

\indexpage Index
\title Using Live CV

Within this section I will guide you through the basic usage of Live CV. Assuming you have Live CV installed, you can
start the application by using its executable found in its installation directory. The following view will open up:

\image startscreen.jpg

\section1 The header

There are 7 buttons on top, which use the basic actions to work with QML files. The first 3 are the \b{New}, \b{Save As}
and \b{Open} actions. To keep the interface minimal, there's no button for the simple \b{Save} action, which instead is
mapped to the CTRL + S key combination while you are in the code editor.

The 4th one opens the Live CV log window, in which you will see either internal messages from Live CV, or custom debug
messages you place in the application. If you try out the following code for example, and open the log window, you will
see the "Rectangle loaded" message :

\code
import QtQuick 2.4

Rectangle{
    Component.onCompleted : {
        console.log('Rectangle loaded')
    }
}
\endcode

\section1 Errors

By default, Live CV shows error messages in its bottom right corner, where a small box with a red border on the left
opens in case of an error. Since not all error messages can be redirected there, some of them might appear in the log
window, so it's a good ideea either to keep the log window open, or to check its icon, on which a circle appears in case
new messages pop up :

\table
\header
    \li Log Icon
    \li Log Icon with Message
\row
    \li \inlineimage logicon.jpg Log Icon
    \li \inlineimage logiconmessage.jpg Log Icon with Message
\endtable

The next 2 buttons deal with increasing or decreasing font size for the editor section.

\section1 The editor

The editor contains an interpreter for the QML language, which recompiles the code every time it gets modified. The
language itself, together with Qts modules contain a ton of elements, which I won't dive into since they are very well
documented on Qts website. What's important to note is that all QML items require the "import QtQuick" statement at the
beginning of each QML document, therefore I have configured Live CV to import that automatically, so that the core QML
items would be available from the start. For example, for the snippet of code above, I would have been required to
import the QtQuick module in a standard QML document in order to use the Rectangle element.

Another addition to the language is the \b{codeDocument} property, which contains the path of the currently opened QML
file. This helps in specifying relative paths to the QML file and adds a degree of portability between the file and
the external elements it uses. For example, all of the Live CV samples that load an image or video, use the codeDocument
property to open these files relative to their own path. To do a small test, you can paste the following code into Live
CV, then save the file and see how the value changes :

\code
Text{
    text: 'File Path :' + codeDocument.path
}
\endcode

As for the computer vision part, it is available under a set of pluginable modules. The main one is
\l{lcvcore}{lcvcore}, which contains the code elements required for comptuer vision coding. Most of them are available
through examples you can try out and edit in the \b{samples} directory of your Live CV installation, and the rest are
documented in the available modules listed on the index page.

Don't forget that most of the elements are in fact wrappers for Open CV functions and share the same name,
so if you need more information you can always check the Open CV documentation for that.


*/
