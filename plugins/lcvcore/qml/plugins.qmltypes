import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'Live CV 1.3'

Module {
    dependencies: ["QtQuick 2.3"]
    Component {
        name: "QAbsDiff"
        defaultProperty: "data"
        prototype: "QMatFilter"
        exports: ["lcvcore/AbsDiff 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "input2"; type: "QMat"; isPointer: true }
    }
    Component {
        name: "QAlphaMerge"
        defaultProperty: "data"
        prototype: "QMatFilter"
        exports: ["lcvcore/AlphaMerge 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "mask"; type: "QMat"; isPointer: true }
    }
    Component {
        name: "QCamCapture"
        defaultProperty: "data"
        prototype: "QMatDisplay"
        exports: ["lcvcore/CamCapture 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "device"; type: "QString" }
        Property { name: "paused"; type: "bool" }
        Property { name: "fps"; type: "double" }
        Property { name: "resolution"; type: "QSize" }
        Method { name: "switchMat" }
    }
    Component {
        name: "QDrawHistogram"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["lcvcore/DrawHistogram 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "RenderType"
            values: {
                "ConnectedLines": 0,
                "Rectangles": 1,
                "Binary": 2,
                "BinaryConverted": 3
            }
        }
        Property { name: "values"; type: "QVariantList" }
        Property { name: "colors"; type: "QVariantList" }
        Property { name: "maxValue"; type: "double" }
        Property { name: "render"; type: "RenderType" }
        Method {
            name: "setValuesFromIntList"
            Parameter { name: "values"; type: "QList<int>" }
        }
        Method {
            name: "setValuesFromIntListAt"
            Parameter { name: "values"; type: "QList<int>" }
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "QGlobalItem"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["lcvcore/GlobalItem 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QQmlComponent"; isPointer: true }
        Property { name: "stateId"; type: "QString" }
        Property { name: "item"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Signal {
            name: "stateIdChanged"
            Parameter { name: "arg"; type: "QString" }
        }
        Method {
            name: "setSource"
            Parameter { name: "arg"; type: "QQmlComponent"; isPointer: true }
        }
        Method {
            name: "setStateId"
            Parameter { name: "arg"; type: "QString" }
        }
        Method { name: "reload" }
    }
    Component {
        name: "QGlobalItemProperty"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["lcvcore/GlobalItemProperty 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "value"; type: "QVariant" }
    }
    Component {
        name: "QImRead"
        defaultProperty: "data"
        prototype: "QMatDisplay"
        exports: ["lcvcore/ImRead 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Load"
            values: {
                "CV_LOAD_IMAGE_UNCHANGED": -1,
                "CV_LOAD_IMAGE_GRAYSCALE": 0,
                "CV_LOAD_IMAGE_COLOR": 1,
                "CV_LOAD_IMAGE_ANYDEPTH": 2,
                "CV_LOAD_IMAGE_ANYCOLOR": 4
            }
        }
        Property { name: "file"; type: "QString" }
        Property { name: "iscolor"; type: "int" }
    }
    Component {
        name: "QImWrite"
        prototype: "QObject"
        exports: ["lcvcore/ImWrite 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "params"; type: "QJSValue" }
        Method {
            name: "saveImage"
            type: "bool"
            Parameter { name: "file"; type: "QString" }
            Parameter { name: "image"; type: "QMat"; isPointer: true }
        }
    }
    Component {
        name: "QMat"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["lcvcore/Mat 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "CV8U": 0,
                "CV8S": 1,
                "CV16U": 2,
                "CV16S": 3,
                "CV32S": 4,
                "CV32F": 5,
                "CV64F": 6
            }
        }
        Method { name: "data"; type: "QMatAccess*" }
        Method { name: "dataSize"; type: "QSize" }
        Method { name: "createOwnedObject"; type: "QMat*" }
        Method { name: "cloneMat"; type: "QMat*" }
    }
    Component {
        name: "QMat2DArray"
        defaultProperty: "data"
        prototype: "QMatDisplay"
        exports: ["lcvcore/Mat2DArray 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "values"; type: "QVariantList" }
        Property { name: "type"; type: "QMat::Type" }
    }
    Component {
        name: "QMatAccess"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["lcvcore/MatAccess 1.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "rows"; type: "int" }
        Method { name: "cols"; type: "int" }
        Method { name: "channels"; type: "int" }
        Method { name: "depth"; type: "int" }
        Method { name: "values"; type: "QVariantList" }
        Method {
            name: "setValues"
            Parameter { name: "values"; type: "QVariantList" }
        }
    }
    Component {
        name: "QMatBuffer"
        defaultProperty: "data"
        prototype: "QMatDisplay"
        exports: ["lcvcore/MatBuffer 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "input"; type: "QMat"; isPointer: true }
    }
    Component {
        name: "QMatDisplay"
        defaultProperty: "data"
        prototype: "QQuickItem"
        Property { name: "output"; type: "QMat"; isReadonly: true; isPointer: true }
        Property { name: "linearFilter"; type: "bool" }
    }
    Component {
        name: "QMatEmpty"
        defaultProperty: "data"
        prototype: "QMatDisplay"
        exports: ["lcvcore/MatEmpty 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "matSize"; type: "QSize" }
        Property { name: "color"; type: "QColor" }
        Property { name: "channels"; type: "int" }
        Property { name: "type"; type: "QMat::Type" }
    }
    Component {
        name: "QMatFilter"
        defaultProperty: "data"
        prototype: "QMatDisplay"
        Property { name: "input"; type: "QMat"; isPointer: true }
    }
    Component {
        name: "QMatList"
        prototype: "QAbstractListModel"
        exports: ["lcvcore/MatList 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "appendMat"
            Parameter { name: "mat"; type: "QMat"; isPointer: true }
        }
        Method {
            name: "removeMat"
            Parameter { name: "mat"; type: "QMat"; isPointer: true }
        }
        Method {
            name: "removeAt"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "at"
            type: "QMat*"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "size"; type: "int" }
    }
    Component {
        name: "QMatRead"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["lcvcore/MatRead 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "input"; type: "QMat"; isPointer: true }
        Property { name: "font"; type: "QFont" }
        Property { name: "color"; type: "QColor" }
        Property { name: "numberWidth"; type: "int" }
        Property { name: "squareCell"; type: "bool" }
    }
    Component {
        name: "QMatRoi"
        defaultProperty: "data"
        prototype: "QMatFilter"
        exports: ["lcvcore/MatRoi 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "regionX"; type: "int" }
        Property { name: "regionY"; type: "int" }
        Property { name: "regionWidth"; type: "int" }
        Property { name: "regionHeight"; type: "int" }
    }
    Component {
        name: "QMatView"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["lcvcore/MatView 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "mat"; type: "QMat"; isPointer: true }
        Property { name: "linearFilter"; type: "bool" }
        Signal {
            name: "matChanged"
            Parameter { name: "arg"; type: "QMat"; isPointer: true }
        }
    }
    Component {
        name: "QVideoCapture"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["lcvcore/VideoCapture 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "output"; type: "QMat"; isReadonly: true; isPointer: true }
        Property { name: "totalFrames"; type: "int"; isReadonly: true }
        Property { name: "linearFilter"; type: "bool" }
        Property { name: "file"; type: "QString" }
        Property { name: "paused"; type: "bool" }
        Property { name: "fps"; type: "double" }
        Property { name: "currentFrame"; type: "int" }
        Property { name: "loop"; type: "bool" }
        Signal { name: "outChanged" }
        Method { name: "switchMat" }
        Method {
            name: "seekTo"
            Parameter { name: "frame"; type: "int" }
        }
    }
    Component {
        name: "QVideoWriter"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["lcvcore/VideoWriter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "init"; type: "QJSValue" }
        Property { name: "filename"; type: "QString" }
        Property { name: "input"; type: "QMat"; isPointer: true }
        Property { name: "framesWritten"; type: "int"; isReadonly: true }
        Method {
            name: "setInit"
            Parameter { name: "init"; type: "QJSValue" }
        }
        Method {
            name: "setFilename"
            Parameter { name: "filename"; type: "QString" }
        }
        Method {
            name: "setInput"
            Parameter { name: "input"; type: "QMat"; isPointer: true }
        }
        Method { name: "save" }
        Method {
            name: "write"
            Parameter { name: "image"; type: "QMat"; isPointer: true }
        }
    }
}
